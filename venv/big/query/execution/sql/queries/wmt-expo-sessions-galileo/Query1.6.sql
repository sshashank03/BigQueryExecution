INSERT OVERWRITE TABLE expfw.galileo_step2_active_vtc_totals_temp_app PARTITION (snapshot_day)
SELECT
    gal.partition_day,
    gal.exp_id,
    gal.version,
    gal.var_id,
    gal.unit_type,
    exp.is_control,
    exp.start_date AS exp_start_date,
    exp.end_date AS exp_end_date,
    gal.vtc,
    gal.qualified,
    gal.experience_lvl2,
    gal.event_cnt,
    gal.homepage_pv_cnt,
    gal.search_pv_cnt,
    gal.browse_pv_cnt,
    gal.item_pv_cnt,
    gal.signin_pv_cnt,
    gal.atc_cnt,
    gal.cart_remove_cnt,
    gal.buynow_cnt,
    gal.cart_pv_cnt,
    gal.pac_pv_cnt,
    gal.stockup_pv_cnt,
    gal.bookslot_pv_cnt,
    gal.bookslot_confirm_cnt,
    gal.chkout_buttontap_cnt,
    gal.checkout_attempt_cnt,
    gal.review_order_pv_cnt,
    gal.myitems_pv_cnt,
    gal.thankyou_amended_pv_cnt,
    gal.orders,
    gal.gmv,
    gal.units,
    gal.ftb_cnt,
    gal.ff_method_digital_gmv,
    gal.ff_method_digital_units,
    gal.ff_method_shipping_gmv,
    gal.ff_method_shipping_units,
    gal.ff_method_pickup_gmv,
    gal.ff_method_pickup_units,
    gal.ff_method_delivery_gmv,
    gal.ff_method_delivery_units,
    gal.ff_method_other_gmv,
    gal.ff_method_other_units,
    gal.node_type_fc_gmv,
    gal.node_type_fc_units,
    gal.node_type_store_gmv,
    gal.node_type_store_units,
    gal.node_type_3p_gmv,
    gal.node_type_3p_units,
    gal.node_type_digital_gmv,
    gal.node_type_digital_units,
    gal.node_type_other_gmv,
    gal.node_type_other_units,
    gal.div_apprl_gmv,
    gal.div_apprl_units,
    gal.div_cnsmbl_gmv,
    gal.div_cnsmbl_units,
    gal.div_entmnt_gmv,
    gal.div_entmnt_units,
    gal.div_food_gmv,
    gal.div_food_units,
    gal.div_hardln_gmv,
    gal.div_hardln_units,
    gal.div_health_gmv,
    gal.div_health_units,
    gal.div_home_gmv,
    gal.div_home_units,
    gal.div_srvc_gmv,
    gal.div_srvc_units,
    gal.div_other_gmv,
    gal.div_other_units,
    gal.cp,
    '@partition_day' AS snapshot_day
FROM (
    SELECT
        partition_day,
        exp_id,
        var_id,
        unit_type,
        version,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN NULL ELSE vtc END AS vtc,
        MAX(qualified_request OR qualified_beacon) AS qualified,
        MAX(dimensional_split["experience_lvl2"]) AS experience_lvl2,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["event_cnt"]) END AS event_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["homepage_pv_cnt"]) END AS homepage_pv_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["search_pv_cnt"]) END AS search_pv_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["browse_pv_cnt"]) END AS browse_pv_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["item_pv_cnt"]) END AS item_pv_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["signin_pv_cnt"]) END AS signin_pv_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["atc_cnt"]) END AS atc_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["cart_remove_cnt"]) END AS cart_remove_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["buynow_cnt"]) END AS buynow_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["cart_pv_cnt"]) END AS cart_pv_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["pac_pv_cnt"]) END AS pac_pv_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["stockup_pv_cnt"]) END AS stockup_pv_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["bookslot_pv_cnt"]) END AS bookslot_pv_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["bookslot_confirm_cnt"]) END AS bookslot_confirm_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["chkout_buttontap_cnt"]) END AS chkout_buttontap_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["checkout_attempt_cnt"]) END AS checkout_attempt_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["review_order_pv_cnt"]) END AS review_order_pv_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["myitems_pv_cnt"]) END AS myitems_pv_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["thankyou_amended_pv_cnt"]) END AS thankyou_amended_pv_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["orders"]) END AS orders,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["gmv"]) END AS gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["units"]) END AS units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["ftb_cnt"]) END AS ftb_cnt,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["ff_method_digital_gmv"]) END AS ff_method_digital_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["ff_method_digital_units"]) END AS ff_method_digital_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["ff_method_shipping_gmv"]) END AS ff_method_shipping_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["ff_method_shipping_units"]) END AS ff_method_shipping_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["ff_method_pickup_gmv"]) END AS ff_method_pickup_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["ff_method_pickup_units"]) END AS ff_method_pickup_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["ff_method_delivery_gmv"]) END AS ff_method_delivery_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["ff_method_delivery_units"]) END AS ff_method_delivery_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["ff_method_other_gmv"]) END AS ff_method_other_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["ff_method_other_units"]) END AS ff_method_other_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["node_type_fc_gmv"]) END AS node_type_fc_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["node_type_fc_units"]) END AS node_type_fc_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["node_type_store_gmv"]) END AS node_type_store_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["node_type_store_units"]) END AS node_type_store_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["node_type_3p_gmv"]) END AS node_type_3p_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["node_type_3p_units"]) END AS node_type_3p_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["node_type_digital_gmv"]) END AS node_type_digital_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["node_type_digital_units"]) END AS node_type_digital_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["node_type_other_gmv"]) END AS node_type_other_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["node_type_other_units"]) END AS node_type_other_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_apprl_gmv"]) END AS div_apprl_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_apprl_units"]) END AS div_apprl_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_cnsmbl_gmv"]) END AS div_cnsmbl_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_cnsmbl_units"]) END AS div_cnsmbl_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_entmnt_gmv"]) END AS div_entmnt_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_entmnt_units"]) END AS div_entmnt_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_food_gmv"]) END AS div_food_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_food_units"]) END AS div_food_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_hardln_gmv"]) END AS div_hardln_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_hardln_units"]) END AS div_hardln_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_health_gmv"]) END AS div_health_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_health_units"]) END AS div_health_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_home_gmv"]) END AS div_home_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_home_units"]) END AS div_home_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_srvc_gmv"]) END AS div_srvc_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_srvc_units"]) END AS div_srvc_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_other_gmv"]) END AS div_other_gmv,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["div_other_units"]) END AS div_other_units,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN SUM(0) ELSE SUM(mtrc_nm_val["cp"]) END AS cp
    FROM
        expfw.galileo_session_daily_totals_v
    WHERE
        partition_day BETWEEN DATE_SUB('@partition_day', 180) AND '@partition_day'
    AND tenant = 'gm_app'
    AND exp_id IN (
        SELECT exp_id FROM expfw.galileo_step2_active_exp_app WHERE partition_day = '@partition_day' GROUP BY 1
    )
    GROUP BY
        partition_day,
        exp_id,
        var_id,
        unit_type,
        version,
        CASE WHEN partition_day IN ${hivevar:EXCLUDE_DATES} THEN NULL ELSE vtc END
) gal
INNER JOIN (
    SELECT
        *
    FROM
        expfw.galileo_step2_active_exp_app
    WHERE
        partition_day = '@partition_day'
) exp
ON
    gal.exp_id = exp.exp_id
AND gal.var_id = exp.var_id
AND gal.version = exp.version
;